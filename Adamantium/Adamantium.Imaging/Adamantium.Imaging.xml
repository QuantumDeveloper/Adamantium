<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Adamantium.Imaging</name>
    </assembly>
    <members>
        <member name="T:Adamantium.Imaging.AnimatedImageDescription">
            <summary>
            A description for animated <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.AnimatedImageDescription.Dimension">
            <summary>
            The dimension of a texture.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.AnimatedImageDescription.Width" -->
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.AnimatedImageDescription.Height" -->
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.XOffset">
            <summary>
            Horizontal offset for current frame from the top left corner
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.YOffset">
            <summary>
            Vertical offset for current frame from the top left corner
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.DelayNumerator">
            <summary>
            Frame delay fraction numerator
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.DelayDenominator">
            <summary>
            Frame delay fraction denominator
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.SequenceNumber">
            <summary>
            Number of cirrent frame
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Adamantium.Imaging.AnimatedImageDescription.Depth" -->
        <!-- Badly formed XML comment ignored for member "P:Adamantium.Imaging.AnimatedImageDescription.ArraySize" -->
        <!-- Badly formed XML comment ignored for member "P:Adamantium.Imaging.AnimatedImageDescription.MipLevels" -->
        <member name="F:Adamantium.Imaging.AnimatedImageDescription.BytesPerPixel">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:AdamantiumVulkan.Core.Format"/></strong>).</p> </dd>	
            </summary>	
            <unmanaged>Vulkan imange Format</unmanaged>	
        </member>
        <member name="P:Adamantium.Imaging.ComponentsBuffer.DensityX">
            <summary> X density (dots per inch).</summary>
        </member>
        <member name="P:Adamantium.Imaging.ComponentsBuffer.DensityY">
            <summary> Y density (dots per inch).</summary>
        </member>
        <member name="M:Adamantium.Imaging.ComponentsBuffer.ChangeColorSpace(Adamantium.Imaging.Jpeg.ColorSpace)">
            <summary>
            Converts the colorspace of an image (in-place)
            </summary>
            <param name="cs">Colorspace to convert into</param>
            <returns>Self</returns>
        </member>
        <member name="T:Adamantium.Imaging.Dds.CubemapFlags">
            <summary>
            DDS Cubemap flags.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.DDSFlags">
            <summary>
            Flags used by <see cref="M:Adamantium.Imaging.Dds.DDSHelper.LoadFromMemory(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})"/>.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Dds.DDSHelper.MagicHeader">
            <summary>
            Magic code to identify DDS header
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.LegacyMap.#ctor(Adamantium.Imaging.Dds.DXGIFormat,Adamantium.Imaging.Dds.ConversionFlags,Adamantium.Imaging.Dds.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.DDSHelper.LegacyMap" /> struct.
            </summary>
            <param name="format">The format.</param>
            <param name="conversionFlags">The conversion flags.</param>
            <param name="pixelFormat">The pixel format.</param>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.DecodeDDSHeader(System.IntPtr,System.Int32,Adamantium.Imaging.Dds.DDSFlags,Adamantium.Imaging.ImageDescription@,Adamantium.Imaging.Dds.DXGIFormat@,Adamantium.Imaging.Dds.ConversionFlags@)">
            <summary>
            Decodes DDS header including optional DX10 extended header
            </summary>
            <param name="headerPtr">Pointer to the DDS header.</param>
            <param name="size">Size of the DDS content.</param>
            <param name="flags">Flags used for decoding the DDS header.</param>
            <param name="description">Output texture description.</param>
            <param name="convFlags">Output conversion flags.</param>
            <exception cref="T:System.ArgumentException">If the argument headerPtr is null</exception>
            <exception cref="T:System.InvalidOperationException">If the DDS header contains invalid data.</exception>
            <returns>True if the decoding is successful, false if this is not a DDS header.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.EncodeDDSHeader(Adamantium.Imaging.ImageDescription,Adamantium.Imaging.Dds.DDSFlags,System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            Encodes DDS file header (magic value, header, optional DX10 extended header)
            </summary>
            <param name="flags">Flags used for decoding the DDS header.</param>
            <param name="description">Output texture description.</param>
            <param name="pDestination">Pointer to the DDS output header. Can be set to IntPtr.Zero to calculated the required bytes.</param>
            <param name="maxsize">The maximum size of the destination buffer.</param>
            <param name="required">Output the number of bytes required to write the DDS header.</param>
            <exception cref="T:System.ArgumentException">If the argument headerPtr is null</exception>
            <exception cref="T:System.InvalidOperationException">If the DDS header contains invalid data.</exception>
            <returns>True if the decoding is successful, false if this is not a DDS header.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.LegacyExpandScanline(System.IntPtr,System.Int32,AdamantiumVulkan.Core.Format,System.IntPtr,System.Int32,Adamantium.Imaging.Dds.DDSHelper.TEXP_LEGACY_FORMAT,System.Int32*,Adamantium.Imaging.ImageHelper.ScanlineFlags)">
            <summary>
            Converts an image row with optional clearing of alpha value to 1.0
            </summary>
            <param name="pDestination"></param>
            <param name="outSize"></param>
            <param name="outFormat"></param>
            <param name="pSource"></param>
            <param name="inSize"></param>
            <param name="inFormat"></param>
            <param name="pal8"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.LoadFromMemory(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Load a DDS file in memory
            </summary>
            <param name="pSource">Source buffer</param>
            <param name="size">Size of the DDS texture.</param>
            <param name="makeACopy">Whether or not to make a copy of the DDS</param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DDSHelper.CreateImageFromDDS(System.IntPtr,System.Int32,System.Int32,Adamantium.Imaging.ImageDescription,Adamantium.Imaging.Dds.DXGIFormat,Adamantium.Imaging.Image.PitchFlags,Adamantium.Imaging.Dds.ConversionFlags,System.Int32*,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Converts or copies image data from pPixels into scratch image data
            </summary>
            <param name="pDDS"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <param name="metadata"></param>
            <param name="cpFlags"></param>
            <param name="convFlags"></param>
            <param name="pal8"></param>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="T:Adamantium.Imaging.Dds.DXGIFormat">
            <summary>
            Resource data formats, including fully-typed and typeless formats. A list of
            modifiers at the bottom of the page more fully describes each format type.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Dds.DXGIFormat.Unknown">
            <summary>
            The format is not known.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.DXGIFormatHelper">
            <summary>
            Helper to use with <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/>.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.SizeOfInBytes(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Calculates the size of a <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> in bytes. Can be 0 for compressed DXGIFormat (as they are less than 1 byte)
            </summary>
            <param name="DXGIFormat">The DXGI DXGIFormat.</param>
            <returns>size of in bytes</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.SizeOfInBits(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Calculates the size of a <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> in bits.
            </summary>
            <param name="DXGIFormat">The DXGI DXGIFormat.</param>
            <returns>size of in bits</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsValid(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Returns true if the <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is valid.
            </summary>
            <param name="DXGIFormat">A DXGIFormat to validate</param>
            <returns>True if the <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is valid.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsCompressed(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Returns true if the <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is a compressed DXGIFormat.
            </summary>
            <param name="DXGIFormat">The DXGIFormat to check for compressed.</param>
            <returns>True if the <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is a compressed DXGIFormat</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsPacked(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Determines whether the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is packed.
            </summary>
            <param name="DXGIFormat">The DXGI DXGIFormat.</param>
            <returns><c>true</c> if the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is packed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsVideo(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Determines whether the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is video.
            </summary>
            <param name="DXGIFormat">The <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is video; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsSRgb(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Determines whether the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is a SRGB DXGIFormat.
            </summary>
            <param name="DXGIFormat">The <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is a SRGB DXGIFormat; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.IsTypeless(Adamantium.Imaging.Dds.DXGIFormat)">
            <summary>
            Determines whether the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is typeless.
            </summary>
            <param name="DXGIFormat">The <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/> is typeless; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.ComputeScanlineCount(Adamantium.Imaging.Dds.DXGIFormat,System.Int32)">
            <summary>
            Computes the scanline count (number of scanlines).
            </summary>
            <param name="DXGIFormat">The <see cref="T:Adamantium.Imaging.Dds.DXGIFormat"/>.</param>
            <param name="height">The height.</param>
            <returns>The scanline count.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.DXGIFormatHelper.#cctor">
            <summary>
            Static initializer to speed up size calculation (not sure the JIT is enough "smart" for this kind of thing).
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.FourCC">
            <summary>
            A FourCC descriptor.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Dds.FourCC.Empty">
            <summary>
            Empty FourCC.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.FourCC" /> struct.
            </summary>
            <param name="fourCC">The fourCC value as a string .</param>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.#ctor(System.Char,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.FourCC" /> struct.
            </summary>
            <param name="byte1">The byte1.</param>
            <param name="byte2">The byte2.</param>
            <param name="byte3">The byte3.</param>
            <param name="byte4">The byte4.</param>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.FourCC" /> struct.
            </summary>
            <param name="fourCC">The fourCC value as an uint.</param>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.FourCC" /> struct.
            </summary>
            <param name="fourCC">The fourCC value as an int.</param>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(Adamantium.Imaging.Dds.FourCC)~System.UInt32">
            <summary>
            Performs an implicit conversion from <see cref="T:Adamantium.Imaging.Dds.FourCC"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(Adamantium.Imaging.Dds.FourCC)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Adamantium.Imaging.Dds.FourCC"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(System.UInt32)~Adamantium.Imaging.Dds.FourCC">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Adamantium.Imaging.Dds.FourCC"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(System.Int32)~Adamantium.Imaging.Dds.FourCC">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Adamantium.Imaging.Dds.FourCC"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(Adamantium.Imaging.Dds.FourCC)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Adamantium.Imaging.Dds.FourCC"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.op_Implicit(System.String)~Adamantium.Imaging.Dds.FourCC">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Adamantium.Imaging.Dds.FourCC"/>.
            </summary>
            <param name="d">The d.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.Dds.FourCC.ToString(System.String,System.IFormatProvider)">
            <summary>
            Provides a custom string representation of the FourCC descriptor.
            </summary>
            <remarks>
            The general format "G" is equivalent to the parameterless.
            <see cref="M:Adamantium.Imaging.Dds.FourCC.ToString"/>. The special format "I" returns a
            string representation which can be used to construct a Media
            Foundation format GUID. It is equivalent to "X08".
            </remarks>
            <param name="format">The format descriptor, which can be "G" (empty
            or <c>null</c> is equivalent to "G"), "I" or any valid standard
            number format.</param>
            <param name="formatProvider">The format provider for formatting
            numbers.</param>
            <returns>The requested string representation.</returns>
            <exception cref="T:System.FormatException">In case of
            <paramref name="format"/> is not "G", "I" or a valid number
            format.</exception>
        </member>
        <member name="T:Adamantium.Imaging.Dds.HeaderFlags">
            <summary>
            DDS Header flags.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.PixelFormat">
            <summary>
            Internal structure used to describe a DDS pixel format.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Dds.PixelFormat.#ctor(Adamantium.Imaging.Dds.PixelFormatFlags,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Dds.PixelFormat" /> struct.
            </summary>
            <param name="flags">The flags.</param>
            <param name="fourCC">The four CC.</param>
            <param name="rgbBitCount">The RGB bit count.</param>
            <param name="rBitMask">The r bit mask.</param>
            <param name="gBitMask">The g bit mask.</param>
            <param name="bBitMask">The b bit mask.</param>
            <param name="aBitMask">A bit mask.</param>
        </member>
        <member name="T:Adamantium.Imaging.Dds.PixelFormatFlags">
            <summary>
            PixelFormat flags.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.ResourceDimension">
            <summary>
            Identifies the type of resource being used.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Dds.SurfaceFlags">
            <summary>
            DDS Surface flags.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Gif.GifDecoder.ProcessImageDescriptor(System.IO.Stream,Adamantium.Imaging.Gif.GifImage)">
            <summary>
            Read GIF frame
            </summary>
            <param name="stream"></param>
            <param name="gifImage"></param>
        </member>
        <member name="M:Adamantium.Imaging.Gif.GifDecoder.ReadImageData(System.IO.Stream,Adamantium.Imaging.Gif.GifFrame)">
            Decompress image pixels.
        </member>
        <member name="T:Adamantium.Imaging.Image">
            <summary>
            Provides method to instantiate an image 1D/2D/3D supporting TextureArray and mipmaps on the CPU or to load/save an image from/to the disk.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.pixelBuffers">
            <summary>
            Pixel buffers.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.pixelBufferArray">
            <summary>
            Provides access to all pixel buffers.
            </summary>
            <remarks>
            For Texture3D, each z slice of the Texture3D has a pixelBufferArray * by the number of mipmaps.
            For other textures, there is Description.MipLevels * Description.ArraySize pixel buffers.
            </remarks>
        </member>
        <member name="F:Adamantium.Imaging.Image.totalSizeInBytes">
            <summary>
            Gets the total number of bytes occupied by this image in memory.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.buffer">
            <summary>
            Pointer to the buffer.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.bufferIsDisposable">
            <summary>
            True if the buffer must be disposed.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.handle">
            <summary>
            Handle != null if the buffer is a pinned managed object on the LOH (Large Object Heap).
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Image.Description">
            <summary>
            Description of this image.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Image.DataPointer">
            <summary>
            Gets a pointer to the image buffer in memory.
            </summary>
            <value>A pointer to the image buffer in memory.</value>
        </member>
        <member name="P:Adamantium.Imaging.Image.PixelBuffer">
            <summary>
            Provides access to all pixel buffers.
            </summary>
            <remarks>
            For Texture3D, each z slice of the Texture3D has a pixelBufferArray * by the number of mipmaps.
            For other textures, there is Description.MipLevels * Description.ArraySize pixel buffers.
            </remarks>
        </member>
        <member name="P:Adamantium.Imaging.Image.DefaultImage">
            <summary>
            Gets or sets default image. Actual for APNG if you want to exclude some <see cref="P:Adamantium.Imaging.Image.PixelBuffer"/> from animation sequence
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Image.TotalSizeInBytes">
            <summary>
            Gets the total number of bytes occupied by this image in memory.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Image.#ctor(Adamantium.Imaging.ImageDescription,System.IntPtr,System.Int32,System.Nullable{System.Runtime.InteropServices.GCHandle},System.Boolean,Adamantium.Imaging.Image.PitchFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.Image" /> class.
            </summary>
            <param name="description">The image description.</param>
            <param name="dataPointer">The pointer to the data buffer.</param>
            <param name="offset">The offset from the beginning of the data buffer.</param>
            <param name="handle">The handle (optional).</param>
            <param name="bufferIsDisposable">if set to <c>true</c> [buffer is disposable].</param>
            <exception cref="T:System.InvalidOperationException">If the format is invalid, or width/height/depth/arraysize is invalid with respect to the dimension.</exception>
        </member>
        <member name="M:Adamantium.Imaging.Image.GetMipMapDescription(System.Int32)">
            <summary>
            Gets the mipmap description of this instance for the specified mipmap level.
            </summary>
            <param name="mipmap">The mipmap.</param>
            <returns>A description of a particular mipmap for this texture.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.GetPixelBuffer(System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayOrZSliceIndex">For 3D image, the parameter is the Z slice, otherwise it is an index into the texture array.</param>
            <param name="mipmap">The mipmap.</param>
            <returns>A <see cref="F:Adamantium.Imaging.Image.pixelBufferArray"/>.</returns>
            <exception cref="T:System.ArgumentException">If arrayOrZSliceIndex or mipmap are out of range.</exception>
        </member>
        <member name="M:Adamantium.Imaging.Image.GetPixelBuffer(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayIndex">Index into the texture array. Must be set to 0 for 3D images.</param>
            <param name="zIndex">Z index for 3D image. Must be set to 0 for all 1D/2D images.</param>
            <param name="mipmap">The mipmap.</param>
            <returns>A <see cref="F:Adamantium.Imaging.Image.pixelBufferArray"/>.</returns>
            <exception cref="T:System.ArgumentException">If arrayIndex, zIndex or mipmap are out of range.</exception>
        </member>
        <member name="M:Adamantium.Imaging.Image.Register(Adamantium.Imaging.ImageFileType,Adamantium.Imaging.Image.ImageLoadDelegate,Adamantium.Imaging.Image.ImageSaveDelegate)">
            <summary>
            Registers a loader/saver for a specified image file type.
            </summary>
            <param name="type">The file type (use integer and explicit casting to <see cref="T:Adamantium.Imaging.ImageFileType"/> to register other file format.</param>
            <param name="loader">The loader delegate (can be null).</param>
            <param name="saver">The saver delegate (can be null).</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Adamantium.Imaging.Image.ToDataBox">
            <summary>
            Gets the databox from this image.
            </summary>
            <returns>The databox of this image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.ComputeDataBox">
            <summary>
            Gets the databox from this image.
            </summary>
            <returns>The databox of this image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.ComputeAnimatedDataBox">
            <summary>
            Gets the databox from this image.
            </summary>
            <returns>The databox of this image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New(Adamantium.Imaging.ImageDescription)">
            <summary>
            Creates a new instance of <see cref="T:Adamantium.Imaging.Image"/> from an image description.
            </summary>
            <param name="description">The image description.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New(Adamantium.Imaging.ImageDescription,System.UInt32,Adamantium.Imaging.AnimatedImageDescription[])">
            <summary>
            Creates a new instance of animated <see cref="T:Adamantium.Imaging.Image"/> from an image description.
            </summary>
            <param name="description">The image description.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New1D(System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.Int32)">
            <summary>
            Creates a new instance of a 1D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New2D(System.Int32,System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.Int32)">
            <summary>
            Creates a new instance of a 2D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.NewCube(System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat)">
            <summary>
            Creates a new instance of a Cube <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New3D(System.Int32,System.Int32,System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat)">
            <summary>
            Creates a new instance of a 3D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New(Adamantium.Imaging.ImageDescription,System.IntPtr)">
            <summary>
            Creates a new instance of <see cref="T:Adamantium.Imaging.Image"/> from an image description.
            </summary>
            <param name="description">The image description.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New1D(System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.Int32,System.IntPtr)">
            <summary>
            Creates a new instance of a 1D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New2D(System.Int32,System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.Int32,System.IntPtr)">
            <summary>
            Creates a new instance of a 2D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="arraySize">Size of the array.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.NewCube(System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.IntPtr)">
            <summary>
            Creates a new instance of a Cube <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.New3D(System.Int32,System.Int32,System.Int32,Adamantium.Imaging.MipMapCount,Adamantium.Imaging.SurfaceFormat,System.IntPtr)">
            <summary>
            Creates a new instance of a 3D <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="mipMapCount">The mip map count.</param>
            <param name="format">The format.</param>
            <param name="dataPointer">Pointer to an existing buffer.</param>
            <returns>A new image.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.IntPtr,System.Int32,Adamantium.Imaging.ImageFileType,System.Boolean)">
            <summary>
            Loads an image from an unmanaged memory pointer.
            </summary>
            <param name="dataPointer">Pointer to an unmanaged memory. If <paramref name="makeACopy"/> is false, this buffer must be allocated with <see cref="M:Adamantium.Core.Utilities.AllocateMemory(System.Int32,System.Int32)"/>.</param>
            <param name="dataSize">Size of the unmanaged buffer.</param>
            <param name="expectedType">Expected file type to improve image loading performance</param>
            <param name="makeACopy">True to copy the content of the buffer to a new allocated buffer, false otherwise.</param>
            <returns>An new image.</returns>
            <remarks>If <paramref name="makeACopy"/> is set to false, the returned image is now the holder of the unmanaged pointer and will release it on Dispose. </remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(Adamantium.Core.DataPointer,System.Boolean)">
            <summary>
            Loads an image from an unmanaged memory pointer.
            </summary>
            <param name="dataBuffer">Pointer to an unmanaged memory. If <paramref name="makeACopy"/> is false, this buffer must be allocated with <see cref="M:Adamantium.Core.Utilities.AllocateMemory(System.Int32,System.Int32)"/>.</param>
            <param name="makeACopy">True to copy the content of the buffer to a new allocated buffer, false otherwhise.</param>
            <returns>An new image.</returns>
            <remarks>If <paramref name="makeACopy"/> is set to false, the returned image is now the holder of the unmanaged pointer and will release it on Dispose. </remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Loads an image from an unmanaged memory pointer.
            </summary>
            <param name="dataPointer">Pointer to an unmanaged memory. If <paramref name="makeACopy"/> is false, this buffer must be allocated with <see cref="M:Adamantium.Core.Utilities.AllocateMemory(System.Int32,System.Int32)"/>.</param>
            <param name="dataSize">Size of the unmanaged buffer.</param>
            <param name="makeACopy">True to copy the content of the buffer to a new allocated buffer, false otherwise.</param>
            <returns>An new image.</returns>
            <remarks>If <paramref name="makeACopy"/> is set to false, the returned image is now the holder of the unmanaged pointer and will release it on Dispose. </remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.Byte[])">
            <summary>
            Loads an image from a managed buffer.
            </summary>
            <param name="buffer">Reference to a managed buffer.</param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.IO.Stream,Adamantium.Imaging.ImageFileType)">
            <summary>
            Loads the specified image from a stream.
            </summary>
            <param name="imageStream">The image stream.</param>
            <param name="fileType"></param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.String)">
            <summary>
            Loads the specified image from a file.
            </summary>
            <param name="fileName">The filename.</param>
            <returns>An new image.</returns>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.GetImageTypeFromFileName(System.String)">
            <summary>
            Returns <see cref="T:Adamantium.Imaging.ImageFileType"/> from file name based on its extension to predict its type
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.Image.Save(System.String,Adamantium.Imaging.ImageFileType)">
            <summary>
            Saves this instance to a file.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Save(System.IO.Stream,Adamantium.Imaging.ImageFileType)">
            <summary>
            Saves this instance to a stream.
            </summary>
            <param name="imageStream">The destination stream.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.Load(System.IntPtr,System.Int32,System.Boolean,System.Nullable{System.Runtime.InteropServices.GCHandle})">
            <summary>
            Loads an image from the specified pointer.
            </summary>
            <param name="dataPointer">The data pointer.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="makeACopy">if set to <c>true</c> [make A copy].</param>
            <param name="handle">The handle.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Adamantium.Imaging.Image.Save(Adamantium.Imaging.Image,Adamantium.Imaging.PixelBuffer[],System.Int32,Adamantium.Imaging.ImageDescription,System.IO.Stream,Adamantium.Imaging.ImageFileType)">
            <summary>
            Saves this instance to a stream.
            </summary>
            <param name="img">Image to save</param>
            <param name="pixelBuffers">The buffers to save.</param>
            <param name="count">The number of buffers to save.</param>
            <param name="description">Global description of the buffer.</param>
            <param name="imageStream">The destination stream.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.Image.CalculateImageArray(Adamantium.Imaging.ImageDescription,Adamantium.Imaging.Image.PitchFlags,System.Int32@,System.Int32@)">
            <summary>
            Determines number of image array entries and pixel size.
            </summary>
            <param name="imageDesc">Description of the image to create.</param>
            <param name="pitchFlags">Pitch flags.</param>
            <param name="bufferCount">Output number of mipmap.</param>
            <param name="pixelSizeInBytes">Output total size to allocate pixel buffers for all images.</param>
        </member>
        <member name="M:Adamantium.Imaging.Image.SetupImageArray(System.IntPtr,AdamantiumVulkan.Core.Format,Adamantium.Imaging.AnimatedImageDescription[],Adamantium.Imaging.PixelBuffer[])">
            <summary>
            Allocates PixelBuffers for animated image
            </summary>
            <param name="buffer"></param>
            <param name="imageDesc"></param>
            <param name="pitchFlags"></param>
            <param name="output"></param>
        </member>
        <member name="M:Adamantium.Imaging.Image.SetupImageArray(System.IntPtr,Adamantium.Imaging.ImageDescription,Adamantium.Imaging.Image.PitchFlags,Adamantium.Imaging.PixelBuffer[])">
            <summary>
            Allocates PixelBuffers 
            </summary>
            <param name="buffer"></param>
            <param name="imageDesc"></param>
            <param name="pitchFlags"></param>
            <param name="output"></param>
        </member>
        <member name="T:Adamantium.Imaging.ImageDescription">
            <summary>
            A description for <see cref="T:Adamantium.Imaging.Image"/>.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageDescription.Dimension">
            <summary>
            The dimension of a texture.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.ImageDescription.Width" -->
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.ImageDescription.Height" -->
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.ImageDescription.Depth" -->
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.ImageDescription.ArraySize" -->
        <!-- Badly formed XML comment ignored for member "F:Adamantium.Imaging.ImageDescription.MipLevels" -->
        <member name="F:Adamantium.Imaging.ImageDescription.Format">
            <summary>	
            <dd> <p>Texture format (see <strong><see cref="T:AdamantiumVulkan.Core.Format"/></strong>).</p> </dd>	
            </summary>	
            <unmanaged>Vulkan imange Format</unmanaged>	
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.Equals(Adamantium.Imaging.ImageDescription)">
            <inheritdoc />
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.op_Equality(Adamantium.Imaging.ImageDescription,Adamantium.Imaging.ImageDescription)">
            <summary>
            Comparer operator
            </summary>
            <param name="left">The <see cref="T:Adamantium.Imaging.ImageDescription"/></param>
            <param name="right">The <see cref="T:Adamantium.Imaging.ImageDescription"/></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.op_Inequality(Adamantium.Imaging.ImageDescription,Adamantium.Imaging.ImageDescription)">
            <summary>
            Comparer operator
            </summary>
            <param name="left">The <see cref="T:Adamantium.Imaging.ImageDescription"/></param>
            <param name="right">The <see cref="T:Adamantium.Imaging.ImageDescription"/></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.ImageDescription.ToString">
            <inheritdoc />
        </member>
        <member name="T:Adamantium.Imaging.ImageFileType">
            <summary>
            Image file format used by <see cref="M:Adamantium.Imaging.Image.Save(System.String,Adamantium.Imaging.ImageFileType)"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Unknown">
            <summary>
            An Unknown file format.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Dds">
            <summary>
            A DDS file.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Png">
            <summary>
            A PNG file.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Gif">
            <summary>
            A GIF file.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Jpg">
            <summary>
            A JPG file.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Bmp">
            <summary>
            A BMP file.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Tga">
            <summary>
            A TGA File.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.ImageFileType.Ico">
            <summary>
            An ICO File.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.ImageHelper.ExpandScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,AdamantiumVulkan.Core.Format,Adamantium.Imaging.ImageHelper.ScanlineFlags)">
            <summary>
            Converts an image row with optional clearing of alpha value to 1.0
            </summary>
            <param name="pDestination"></param>
            <param name="outSize"></param>
            <param name="pSource"></param>
            <param name="inSize"></param>
            <param name="inFormat"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Adamantium.Imaging.ImageHelper.CopyScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,AdamantiumVulkan.Core.Format,Adamantium.Imaging.ImageHelper.ScanlineFlags)">
            <summary>
            Copies an image row with optional clearing of alpha value to 1.0.
            </summary>
            <remarks>
            This method can be used in place as well, otherwise copies the image row unmodified.
            </remarks>
            <param name="pDestination">The destination buffer.</param>
            <param name="outSize">The destination size.</param>
            <param name="pSource">The source buffer.</param>
            <param name="inSize">The source size.</param>
            <param name="format">The <see cref="T:AdamantiumVulkan.Core.Format"/> of the source scanline.</param>
            <param name="flags">Scanline flags used when copying the scanline.</param>
        </member>
        <member name="M:Adamantium.Imaging.ImageHelper.SwizzleScanline(System.IntPtr,System.Int32,System.IntPtr,System.Int32,AdamantiumVulkan.Core.Format,Adamantium.Imaging.ImageHelper.ScanlineFlags)">
            <summary>
            Swizzles (RGB &lt;-&gt; BGR) an image row with optional clearing of alpha value to 1.0.
            </summary>
            <param name="pDestination">The destination buffer.</param>
            <param name="outSize">The destination size.</param>
            <param name="pSource">The source buffer.</param>
            <param name="inSize">The source size.</param>
            <param name="format">The <see cref="T:AdamantiumVulkan.Core.Format"/> of the source scanline.</param>
            <param name="flags">Scanline flags used when copying the scanline.</param>
            <remarks>
            This method can be used in place as well, otherwise copies the image row unmodified.
            </remarks>
        </member>
        <member name="T:Adamantium.Imaging.Jpeg.DCT">
            <summary>
            Implements the Discrete Cosine Transform with dynamic CIL
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.DCT.buildC">
            <summary>
            Precomputes cosine terms in A.3.3 of 
            http://www.w3.org/Graphics/JPEG/itu-t81.pdf
            
            Closely follows the term precomputation in the
            Java Advanced Imaging library.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.DCT.FastIDCT(System.Single[])">
            See figure A.3.3 IDCT (informative) on A-5.
            http://www.w3.org/Graphics/JPEG/itu-t81.pdf
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.DecodedJpeg.Initialize">
            <summary>
            This method creates and fills three arrays, Y, Cb, and Cr using the input image.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.GenerateSizeTable">
            <summary>See Figure C.1</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.GenerateCodeTable">
            <summary>See Figure C.2</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.GenerateDecoderTables">
            <summary>See figure F.15</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.Extend(System.Int32,System.Int32)">
            <summary>Figure F.12</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.Decode(Adamantium.Imaging.Jpeg.IO.JPEGBinaryReader)">
            <summary>Figure F.16 - Reads the huffman code bit-by-bit.</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.HuffmanBlockEncoder(System.IO.Stream,System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            HuffmanBlockEncoder run length encodes and Huffman encodes the quantized data.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.bufferIt(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Uses an integer long (32 bits) buffer to store the Huffman encoded bits
            and sends them to outStream by the byte.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.HuffmanTable.InitHuf">
            <summary>
            Initialisation of the Huffman codes for Luminance and Chrominance.
            This code results in the same tables created in the IJG Jpeg-6a
            library.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.padMCU(System.Int32,System.Int32)">
            <summary>
            If a restart marker is found with too little of an MCU count (i.e. our
            Restart Interval is 63 and we have 61 we copy the last MCU until it's full)
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.resetInterval">
            <summary>
            Reset the interval by setting the previous DC value
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.quantizeData">
            <summary>
            Run the Quantization backward method on all of the block data.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.idctData">
            <summary>
            Run the Inverse DCT method on all of the block data
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.scaleByFactors(Adamantium.Imaging.Jpeg.Decoder.BlockUpsamplingMode)">
            <summary>
            Stretches components as needed to normalize the size of all components.
            For example, in a 2x1 (4:2:2) sequence, the Cr and Cb channels will be 
            scaled vertically by a factor of 2.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.decode_dc_coefficient(Adamantium.Imaging.Jpeg.IO.JPEGBinaryReader)">
            <summary>
            Generated from text on F-22, F.2.2.1 - Huffman decoding of DC
            coefficients on ISO DIS 10918-1. Requirements and Guidelines.
            </summary>
            <param name="JPEGStream">Stream that contains huffman bits</param>
            <returns>DC coefficient</returns>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegComponent.decode_ac_coefficients(Adamantium.Imaging.Jpeg.IO.JPEGBinaryReader,System.Single[])">
            <summary>
            Generated from text on F-23, F.13 - Huffman decoded of AC coefficients
            on ISO DIS 10918-1. Requirements and Guidelines.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.BlockUpsamplingMode.BoxFilter">
            <summary> The simplest upsampling mode. Produces sharper edges. </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.BlockUpsamplingMode.Interpolate">
            <summary> Smoother upsampling. May improve color spread for some images. </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegDecoder.MAJOR_VERSION">
            <summary>
            This decoder expects JFIF 1.02 encoding.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegDecoder.JFIF_FIXED_LENGTH">
            <summary>
            The length of the JFIF field not including thumbnail data.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegDecoder.JFXX_FIXED_LENGTH">
            <summary>
            The length of the JFIF extension field not including extension data.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegDecoder.TryParseJFIF(System.Byte[])">
            <summary>
            Tries to parse the JFIF APP0 header
            See http://en.wikipedia.org/wiki/JFIF
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Jpeg.Decoder.JpegHuffmanTable">
            <summary>
             The JPEGHuffmanTable class represents a Huffman table read from a
             JPEG image file.  The standard JPEG AC and DC chrominance and
             luminance values are provided as static fields.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegHuffmanTable.#ctor(System.Int16[],System.Int16[])">
            <summary>
            Construct and initialize a Huffman table. Copies are created of
            the array arguments. lengths[index] stores the number of Huffman
            values with Huffman codes of length index + 1. The values array
            stores the Huffman values in order of increasing code length.
            
            throws ArgumentException if either parameter is null, if
            lengths.Length > 16 or values.Length > 256, if any value in
            length or values is negative, or if the parameters do not
            describe a valid Huffman table
            </summary>
            <param name="lengths"> an array of Huffman code lengths</param>
            <param name="values">a sorted array of Huffman values</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegHuffmanTable.#ctor(System.Int16[],System.Int16[],System.Boolean)">
            <summary>
            Private constructor that avoids unnecessary copying and argument checking.
            </summary>
            <param name="lengths">lengths an array of Huffman code lengths</param>
            <param name="values">a sorted array of Huffman values</param>
            <param name="copy">true if copies should be created of the given arrays</param>
        </member>
        <member name="P:Adamantium.Imaging.Jpeg.Decoder.JpegHuffmanTable.Lengths">
            <summary>
             Retrieve the array of Huffman code lengths.  If the
             returned array is called lengthcount, there are
             lengthcount[index] codes of length index + 1.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.K1Luminance">
            <summary>
            The standard JPEG luminance quantization table.  Values are
            stored in natural order.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.K1Div2Luminance">
            <summary>
            The standard JPEG luminance quantization table, scaled by
            one-half.  Values are stored in natural order.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.K2Chrominance">
            <summary>
            The standard JPEG chrominance quantization table.  Values are
            stored in natural order.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.K2Div2Chrominance">
            <summary>
            The standard JPEG chrominance quantization table, scaled by
            one-half.  Values are stored in natural order.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.#ctor(System.Int32[])">
            <summary>
            Construct a new JPEG quantization table.  A copy is created of
            the table argument.
            </summary>
            <param name="table">The 64-element value table, stored in natural order</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.#ctor(System.Int32[],System.Boolean)">
            <summary>
            Private constructor that avoids unnecessary copying and argument
            checking.
            </summary>
            <param name="table">the 64-element value table, stored in natural order</param>
            <param name="copy">true if a copy should be created of the given table</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Decoder.JpegQuantizationTable.getScaledInstance(System.Single,System.Boolean)">
            <summary>
            Retrieve a copy of this JPEG quantization table with every value
            scaled by the given scale factor, and clamped from 1 to 255
            </summary>
            <param name="scaleFactor">the factor by which to scale this table</param>
            <param name="forceBaseline"> clamp scaled values to a maximum of 255 if baseline or from 1 to 32767 otherwise.</param>
            <returns>new scaled JPEG quantization table</returns>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Encoder.JpegEncoder.#ctor(Adamantium.Imaging.PixelBuffer,System.Int32,System.IO.Stream)">
            <summary>
            Encodes a JPEG, preserving the colorspace and metadata of the input JPEG.
            </summary>
            <param name="decodedJpeg">Decoded Jpeg to start with.</param>
            <param name="quality">Quality of the image from 0 to 100.  (Compression from max to min.)</param>
            <param name="outStream">Stream where the result will be placed.</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.Convolution.Filter1DSymmetric(Adamantium.Imaging.Jpeg.Filter.GrayImage,System.Single[],System.Boolean)">
            <summary>
            Filters an GrayImage with a 1D symmetric filter along the X-axis.
            (This operation is multithreaded)
            </summary>
            <param name="data">GrayImage to be operated on</param>
            <param name="filter">Filter to use (center tap plus right-hand-side)</param>
            <param name="transpose">Transpose the result?</param>
            <returns>Transposed, filtered GrayImage.</returns>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.Convolution.FilterPartSymmetricT(System.Object)">
            <summary>
            Convolves part of an GrayImage with a 1D filter along the X-axis
            and transposes it as well.
            </summary>
            <param name="filterJob">Filter operation details</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.Convolution.FilterPartSymmetric(System.Object)">
            <summary>
            Convolves an GrayImage with a 1D filter along the X-axis.
            </summary>
            <param name="filterJob">Filter operation details</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.Convolution.Conv2DSymm(Adamantium.Imaging.Jpeg.Filter.GrayImage,Adamantium.Imaging.Jpeg.Filter.GrayImage)">
            <summary>
            Convolves an GrayImage with a 2D-symmetric operator.
            </summary>
            <param name="data">Data to be convolved with the operator</param>
            <param name="opUL">Lower-right quadrant of the operator.</param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.Convolution.Conv2D(Adamantium.Imaging.Jpeg.Filter.GrayImage,Adamantium.Imaging.Jpeg.Filter.GrayImage)">
            <summary>
            Vanilla 2D convolution.  Not optimized.
            </summary>
            <param name="data"></param>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.GrayImage.#ctor(System.Int32,System.Int32)">
            <summary>
            Returns a new 0.0-initialized image of specified size.
            </summary>
            <param name="width">Width in pixels</param>
            <param name="height">Height in pixels</param>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.Filter.GrayImage.#ctor(System.Byte[0:,0:])">
            <summary>
            Creates a 0.0 to 1.0 grayscale image from a bitmap.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Jpeg.Filter.GrayImage.Item(System.Int32,System.Int32)">
            <summary>
            Access a pixel within the image.
            </summary>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <returns>Pixel brightness between 0.0 and 1.0</returns>
        </member>
        <member name="T:Adamantium.Imaging.Jpeg.IO.BinaryReader">
            <summary>
            Big-endian binary reader
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Jpeg.IO.BinaryWriter">
            <summary>
            A Big-endian binary writer.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.IO.JPEGBinaryReader.GetNextMarker">
            <summary>
            Seeks through the stream until a marker is found.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.IO.JPEGBinaryReader.ReadBits(System.Int32)">
            <summary>
            Places n bits from the stream, where the most-significant bits
            from the first byte read end up as the most-significant of the returned
            n bits.
            </summary>
            <param name="n">Number of bits to return</param>
            <returns>Integer containing the bits desired -- shifted all the way right.</returns>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.DHT">
            <summary>Huffman Table</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.DQT">
            <summary>Quantization Table</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOS">
            <summary>Start of Scan</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.DRI">
            <summary>Define Restart Interval</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.COM">
            <summary>Comment</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOI">
            <summary>Start of Image</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.EOI">
            <summary>End of Image</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.DNL">
            <summary>Define Number of Lines</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF0">
            <summary>Nondifferential Huffman-coding frame (baseline dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF1">
            <summary>Nondifferential Huffman-coding frame (extended dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF2">
            <summary>Nondifferential Huffman-coding frame (progressive dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF3">
            <summary>Nondifferential Huffman-coding frame Lossless (Sequential)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF5">
            <summary>Differential Huffman-coding frame Sequential DCT</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF6">
            <summary>Differential Huffman-coding frame Progressive DCT</summary> 
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF7">
            <summary>Differential Huffman-coding frame lossless</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF9">
            <summary>Nondifferential Arithmetic-coding frame (extended dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF10">
            <summary>Nondifferential Arithmetic-coding frame (progressive dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF11">
            <summary>Nondifferential Arithmetic-coding frame (lossless)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF13">
            <summary>Differential Arithmetic-coding frame (sequential dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF14">
            <summary>Differential Arithmetic-coding frame (progressive dct)</summary>
        </member>
        <member name="F:Adamantium.Imaging.Jpeg.JPEGMarker.SOF15">
            <summary>Differential Arithmetic-coding frame (lossless)</summary>
        </member>
        <member name="M:Adamantium.Imaging.Jpeg.YCbCr.fromRGB(System.Single[])">
            * RGB to YCbCr range 0-255 */
        </member>
        <member name="T:Adamantium.Imaging.MipMapCount">
            <summary>
            A simple wrapper to specify number of mipmaps.
             Set to true to specify all mipmaps or sets an integer value >= 1
            to specify the exact number of mipmaps.
            </summary>
            <remarks>
            This structure use implicit conversion:
            <ul>
            <li>Set to <c>true</c> to specify all mipmaps.</li>
            <li>Set to <c>false</c> to specify a single mipmap.</li>
            <li>Set to an integer value >=1 to specify an exact count of mipmaps.</li>
            </ul>
            </remarks>
        </member>
        <member name="F:Adamantium.Imaging.MipMapCount.Auto">
            <summary>
            Automatic mipmap level based on texture size.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.MipMapCount" /> struct.
            </summary>
            <param name="allMipMaps">if set to <c>true</c> generates all mip maps.</param>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.MipMapCount" /> struct.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="F:Adamantium.Imaging.MipMapCount.Count">
            <summary>
            Number of mipmaps.
            </summary>
            <remarks>
            Zero(0) means generate all mipmaps. One(1) generates a single mipmap... etc.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.op_Implicit(Adamantium.Imaging.MipMapCount)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:Adamantium.Imaging.MipMapCount"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="mipMap">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.op_Implicit(System.Boolean)~Adamantium.Imaging.MipMapCount">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:Adamantium.Imaging.MipMapCount"/>.
            </summary>
            <param name="mipMapAll">True to generate all mipmaps, false to use a single mipmap.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.op_Implicit(Adamantium.Imaging.MipMapCount)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:Adamantium.Imaging.MipMapCount"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="mipMap">The value.</param>
            <returns>The count of mipmap (0 means all mipmaps).</returns>
        </member>
        <member name="M:Adamantium.Imaging.MipMapCount.op_Implicit(System.Int32)~Adamantium.Imaging.MipMapCount">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Adamantium.Imaging.MipMapCount"/>.
            </summary>
            <param name="mipMapCount">True to generate all mipmaps, false to use a single mipmap.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Adamantium.Imaging.MipMapDescription">
            <summary>
            Describes a mipmap.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.MipMapDescription.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.MipMapDescription" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
            <param name="rowStride">The row stride.</param>
            <param name="depthStride">The depth stride.</param>
            <param name="widthPacked">The packed width.</param>
            <param name="heightPacked">The packed height.</param>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.Width">
            <summary>
            Width of this mipmap.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.Height">
            <summary>
            Height of this mipmap.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.WidthPacked">
            <summary>
            Width of this mipmap.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.HeightPacked">
            <summary>
            Height of this mipmap.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.Depth">
            <summary>
            Depth of this mipmap.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.RowStride">
            <summary>
            RowStride of this mipmap (number of bytes per row).
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.DepthStride">
            <summary>
            DepthStride of this mipmap (number of bytes per depth slice).
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.MipMapDescription.MipmapSize">
            <summary>
            Size in bytes of this whole mipmap.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.MipMapDescription.op_Equality(Adamantium.Imaging.MipMapDescription,Adamantium.Imaging.MipMapDescription)">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Adamantium.Imaging.MipMapDescription.op_Inequality(Adamantium.Imaging.MipMapDescription,Adamantium.Imaging.MipMapDescription)">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.ColorModel">
            <summary>
            Gets or sets the color model.
            </summary>
            <value>The color model.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.ChangeColorModel(Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel)">
            <summary>
            Changes the color model.
            </summary>
            <param name="colorModel">The color model.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            Called when a palette is about to be cached, or precached.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            Called when palette index is about to be retrieve for a given color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.Prepare">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.CachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.CachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.GetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.GetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel.RedGreenBlue">
            <summary>
            The RGB color model is an additive color model in which red, green, and blue light is added together 
            in various ways to reproduce a broad array of colors. The name of the model comes from the initials 
            of the three additive primary colors, red, green, and blue.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel.HueSaturationBrightness">
            <summary>
            HSL is a common cylindrical-coordinate representations of points in an RGB color model, which rearrange 
            the geometry of RGB in an attempt to be more perceptually relevant than the cartesian representation.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel.LabColorSpace">
            <summary>
            A Lab color space is a color-opponent space with dimension L for lightness and a and b for the 
            color-opponent dimensions, based on nonlinearly compressed CIE XYZ color space coordinates.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel.XYZ">
            <summary>
            XYZ color space
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.#ctor(Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache"/> class.
            </summary>
            <param name="colorModel">The color model.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.Prepare">
            <summary>
            Prepares color cache for next use.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.CachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            Called when a palette is about to be cached, or precached.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache.GetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            Called when palette index is about to be retrieve for a given color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.BucketInfo.Colors">
            <summary>
            Gets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.BucketInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.BucketInfo"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.BucketInfo.AddColor(System.Int32,Adamantium.Mathematics.Color)">
            <summary>
            Adds the color to the bucket informations.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>The quality.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.#ctor(Adamantium.Imaging.PaletteQuantizer.ColorCaches.Common.ColorModel,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache"/> class.
            </summary>
            <param name="colorModel">The color model.</param>
            <param name="quality">The quality.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.Prepare">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.LocalitySensitiveHash.LshColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeCacheNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeCacheNode"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeCacheNode.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)">
            <summary>
            Adds the color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeCacheNode.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32)">
            <summary>
            Gets the index of the palette.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache.Prepare">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.Octree.OctreeColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.ColorCount">
            <summary>
            Gets the color count.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.SourceBuffer">
            <summary>
            Gets the source buffer.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.TargetBuffer">
            <summary>
            Gets the target buffer.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.Quantizer">
            <summary>
            Gets the quantizer.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CachedMatrix">
            <summary>
            Cache: Access to already created coeficient matrix.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CachedSummedMatrix">
            <summary>
            Cache: Access to already created coeficient matrix with division performed.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnCreateDefaultPathProvider">
            <summary>
            Called when a need to create default path provider arisen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnPrepare">
            <summary>
            Called when ditherer is about to be prepared.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix">
            <summary>
            Creates the coeficient matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            Allows ditherer to process image per pixel, with ability to access the rest of the image.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnFinish">
            <summary>
            Called when dithering is finished.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.GetPointPath(System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.IsInplace">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.Prepare(Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer,System.Int32,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.Prepare(Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer,System.Int32,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.GetPointPath">
            <summary>
            Retrieves the path in which to traverse 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.ProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.ProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.Finish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.Prepare(Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer,System.Int32,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.AtkinsonDithering.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.AtkinsonDithering.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.AtkinsonDithering.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth">
             <summary>
             Gets the width of the matrix side.
            
                     center
                       v --------> side width = 2
             | 0 | 1 | 2 | 3 | 4 |
             </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight">
            <summary>
            Gets the height of the matrix side.
            
            --- 
             0  
            --- 
             1  &lt;- center
            --- | 
             2  | side height = 1
            --- v
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.OnProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.IsInplace">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BurkesDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BurkesDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BurkesDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FanDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FanDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FanDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FilterLiteSierra.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FilterLiteSierra.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FilterLiteSierra.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.ShiauDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.ShiauDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.ShiauDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.SierraDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.SierraDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.SierraDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.StuckiDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.StuckiDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.StuckiDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.IsInplace">
            <summary>
            Gets a value indicating whether this ditherer uses only actually process pixel.
            </summary>
            <value>
            	<c>true</c> if this ditherer is inplace; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.Prepare(Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer,System.Int32,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer,Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            Prepares this instance.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.ProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            Processes the specified buffer.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.Finish">
            <summary>
            Finishes this instance.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth">
            <summary>
            Gets the width of the matrix.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight">
            <summary>
            Gets the height of the matrix.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.OnProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.OnProcessPixel(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.IsInplace">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer4.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer4.MatrixWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer4.MatrixHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer8.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer8.MatrixWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BayerDitherer8.MatrixHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.ClusteredDotDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.ClusteredDotDitherer.MatrixWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.ClusteredDotDitherer.MatrixHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.DotHalfToneDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.DotHalfToneDitherer.MatrixWidth">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.DotHalfToneDitherer.MatrixHeight">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend">
            <summary>
            The utility extender class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Selects distinct items by a given selector.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend.IsSupported(AdamantiumVulkan.Core.Format)">
            <summary>
            Determines whether the specified pixel format is supported.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if the specified pixel format is supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend.GetFormatByColorCount(System.Int32)">
            <summary>
            Gets the format by color count.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend.HasAlpha(AdamantiumVulkan.Core.Format)">
            <summary>
            Determines whether the specified pixel format has an alpha channel.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if the specified pixel format has an alpha channel; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Extensions.Extend.IsDeepColor(AdamantiumVulkan.Core.Format)">
            <summary>
            Determines whether [is deep color] [the specified pixel format].
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if [is deep color] [the specified pixel format]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Guard.CheckNull(System.Object,System.String)">
            <summary>
            Checks if an argument is null
            </summary>
            <param name="argument">argument</param>
            <param name="argumentName">argument name</param>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.Palette">
            <summary>
            Gets or sets the palette.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.#ctor(Adamantium.Imaging.PixelBuffer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer"/> class.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.LineTask.StartOffset">
            <summary>
            Gets or sets the start offset.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.LineTask.EndOffset">
            <summary>
            Gets or sets the end offset.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.LineTask.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer.LineTask"/> class.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel">
            <summary>
            This is a pixel format independent pixel.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.X">
            <summary>
            Gets the X.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Y">
            <summary>
            Gets the Y.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Parent">
            <summary>
            Gets the parent buffer.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.UsePalette">
            <summary>
            Gets a value indicating whether this instance is indexed.
            </summary>
            <value>
            	<c>true</c> if this instance is indexed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.#ctor(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel"/> struct.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.GetPixelType(AdamantiumVulkan.Core.Format)">
            <summary>
            Gets the type of the pixel format.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Update(System.Int32,System.Int32)">
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.ReadRawData(System.IntPtr)">
            <summary>
            Reads the raw data.
            </summary>
            <param name="imagePointer">The image pointer.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.ReadData(System.Byte[],System.Int32)">
            <summary>
            Reads the data.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.WriteRawData(System.IntPtr)">
            <summary>
            Writes the raw data.
            </summary>
            <param name="imagePointer">The image pointer.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.WriteData(System.Byte[],System.Int32)">
            <summary>
            Writes the data.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb1555">
            <summary>
            Name |     Blue     |    Green     |     Red      | Alpha (bit)
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb1555.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb1555.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb1555.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb1555.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb64">
            <summary>
            Name |                     Blue                      |                     Green                     |                      Red                      |                     Alpha                     |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|44444444444444444444444|55555555555555555555555|66666666666666666666666|77777777777777777777777|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb64.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb64.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb64.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb64.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb8888">
            <summary>
            Name |          Blue         |        Green          |           Red         |         Alpha         |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb8888.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb8888.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb8888.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataArgb8888.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr888">
            <summary>
            Name |          Blue         |        Green          |           Red         | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr888.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr888.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr888.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr888.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr8888">
            <summary>
            Name |          Blue         |        Green          |           Red         |         Unused        |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr8888.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr8888.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr8888.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataBgr8888.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataGray16">
            <summary>
            Name |                  Grayscale                    |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15| 
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataGray16.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataGray16.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataGray16.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataGray16.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb48">
            <summary>
            Name |                     Blue                      |                     Green                     |                      Red                      | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|44444444444444444444444|55555555555555555555555|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb48.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb48.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb48.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb48.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb555">
            <summary>
            Name |     Blue     |    Green     |     Red      | Unused
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb555.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb555.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb555.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb555.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb565">
            <summary>
            Name |     Blue     |      Green      |     Red      | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb565.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb565.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb565.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb565.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb888">
            <summary>
            Name |          Red         |        Green          |           Blue         | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb888.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb888.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb888.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb888.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb8888">
            <summary>
            Name |          Red         |        Green          |           Red         |         Unused        |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb8888.Rgba">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Rgba"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb8888.GetColor">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb8888.SetColor(Adamantium.Mathematics.Color)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.SetColor(Adamantium.Mathematics.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.PixelDataRgb8888.Value">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Helpers.Pixels.IGenericPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.PixelTransform.SourcePixel">
            <summary>
            Gets the source pixel.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Helpers.PixelTransform.TargetPixel">
            <summary>
            Gets the target pixel.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.PixelTransform.#ctor(Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel,Adamantium.Imaging.PaletteQuantizer.Helpers.Pixel)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Helpers.PixelTransform"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.QuantizationHelper.PrecalculateFactors">
            <summary>
            Precalculates the alpha-fix values for all the possible alpha values (0-255).
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.QuantizationHelper.ConvertAlpha(Adamantium.Mathematics.Color)">
            <summary>
            Converts the alpha blended color to a non-alpha blended color.
            </summary>
            <param name="color">The alpha blended color (ARGB).</param>
            <returns>The non-alpha blended color (RGB).</returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Helpers.QuantizationHelper.ConvertAlpha(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            Converts the alpha blended color to a non-alpha blended color.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)">
            <summary>
            Retrieves the path throughout the image to determine the order in which pixels will be scanned.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.ChangeCacheProvider(Adamantium.Imaging.PaletteQuantizer.ColorCaches.IColorCache)">
            <summary>
            Changes the cache provider.
            </summary>
            <param name="colorCache">The color cache.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.CachePalette(System.Collections.Generic.IList{Adamantium.Mathematics.Color})">
            <summary>
            Caches the palette.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache">
            <summary>
            Called when it is needed to create default cache (no cache is supplied from outside).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            Redirection to retrieve palette to be cached, if palette is not available yet.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.InvalidIndex">
            <summary>
            This index will represent invalid palette index.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.ChangePathProvider(Adamantium.Imaging.PaletteQuantizer.PathProviders.IPathProvider)">
            <summary>
            Changes the path provider.
            </summary>
            <param name="pathProvider">The path provider.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            Called when quantizer is about to be prepared for next round.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when color is to be added.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnCreateDefaultPathProvider">
            <summary>
            Called when a need to create default path provider arisen.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            Called when quantized palette is needed.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Called when get palette index for a given color should be returned.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetColorCount">
            <summary>
            Called when get color count.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish">
            <summary>
            Called when about to clear left-overs after quantization.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.GetPointPath(System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.Prepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Prepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.GetColorCount">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.GetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.Finish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Finish"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo">
            <summary>
            Stores all the informations about single color only once, to be used later.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.Color">
            <summary>
            The original color.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.Count">
            <summary>
            The pixel presence count in the image.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.Hue">
            <summary>
            A hue component of the color.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.Saturation">
            <summary>
            A saturation component of the color.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.Brightness">
            <summary>
            A brightness component of the color.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.#ctor(Adamantium.Mathematics.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo"/> struct.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctColorInfo.IncreaseCount">
            <summary>
            Increases the count of pixels of this color.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer">
            <summary>
            This is my baby. Read more in the article on the Code Project:
            http://www.codeproject.com/KB/recipes/SimplePaletteQuantizer.aspx
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Prepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnGetColorCount">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.GetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnFinish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorHueComparer">
            <summary>
            Compares a hue components of a color info.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorSaturationComparer">
            <summary>
            Compares a saturation components of a color info.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorBrightnessComparer">
            <summary>
            Compares a brightness components of a color info.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer">
            <summary>
            This interface provides a color quantization capabilities.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel">
            <summary>
            Gets a value indicating whether to allow parallel processing.
            </summary>
            <value>
              <c>true</c> if to allow parallel processing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Prepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            Prepares the quantizer for image processing.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)">
            <summary>
            Adds the color to quantizer.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPalette(System.Int32)">
            <summary>
            Gets the palette with specified count of the colors.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32)">
            <summary>
            Gets the index of the palette for specific color.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetColorCount">
            <summary>
            Gets the color count.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Finish">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.ColorModel">
            <summary>
            Gets the color model.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.PaletteIndex">
            <summary>
            Gets or sets the index of the palette.
            </summary>
            <value>The index of the palette.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.#ctor(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube"/> class.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.RedSize">
            <summary>
            Gets the size of the red side of this cube.
            </summary>
            <value>The size of the red side of this cube.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.GreenSize">
            <summary>
            Gets the size of the green side of this cube.
            </summary>
            <value>The size of the green side of this cube.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.BlueSize">
            <summary>
            Gets the size of the blue side of this cube.
            </summary>
            <value>The size of the blue side of this cube.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.Color">
            <summary>
            Gets the average color from the colors contained in this cube.
            </summary>
            <value>The average color.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.Shrink">
            <summary>
            Shrinks this cube to the least dimensions that covers all the colors in the RGB space.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.SplitAtMedian(System.Byte,Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube@,Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube@)">
            <summary>
            Splits this cube's color list at median index, and returns two newly created cubes.
            </summary>
            <param name="componentIndex">Index of the component (red = 0, green = 1, blue = 2).</param>
            <param name="firstMedianCutCube">The first created cube.</param>
            <param name="secondMedianCutCube">The second created cube.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.SetPaletteIndex(System.Int32)">
            <summary>
            Assigns a palette index to this cube, to be later found by a GetPaletteIndex method.
            </summary>
            <param name="newPaletteIndex">The palette index to be assigned to this cube.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutCube.IsColorIn(Adamantium.Mathematics.Color)">
            <summary>
            Determines whether the color is in the space of this cube.
            </summary>
            <param name="color">The color to be checked, if it's contained in this cube.</param>
            <returns>if true a color is in the space of this cube, otherwise returns false.</returns>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer">
            <summary>
            The premise behind median cut algorithms is to have every entry in the color map represent 
            the same number of pixels in the original image. In contrast to uniform sub-division, these 
            algorithms divide the color space based on the distribution of the original colors. The 
            process is as follows[2]: 
            
            1. Find the smallest box which contains all the colors in the image.
            2. Sort the enclosed colors along the longest axis of the box.
            3. Split the box into 2 regions at median of the sorted list.
            4. Repeat the above process until the original color space has been divided into 256 regions.
            5. The algorithm then divides the color space in a manner depicted below.
            6. The representative colors are found by averaging the colors in each box, and the appropriate color map index assigned to each color in that box.
            
            Because these algorithms use image information in dividing the color space this class of 
            algorithms consistently produce good results while having memory and time complexity no 
            worse than popularity algorithms[1].
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.SplitCubes(System.Int32)">
            <summary>
            Splits all the cubes on the list.
            </summary>
            <param name="colorCount">The color count.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.Prepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.OnFinish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.MedianCut.MedianCutQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer">
            <summary>
            The NeuQuant Neural-Net image quantization algorithm (© Anthony Dekker 1994) 
            is a replacement for the common Median Cut algorithm. It is described in the 
            article Kohonen neural networks for optimal colour quantization  in Volume 5, 
            pp 351-367 of the journal Network: Computation in Neural Systems, Institute of 
            Physics Publishing, 1994 (PDF version available).
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>The quality.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer"/> class.
            </summary>
            <param name="quality">The quality.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.LearnNeuron(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Forces the strength of bias of the neuron towards certain color.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.LearnNeuronNeighbors(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spread the bias to neuron neighbors.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.OnFinish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.NeuralColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.#ctor(System.Int32,Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode"/> class.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.IsLeaf">
            <summary>
            Gets a value indicating whether this node is a leaf.
            </summary>
            <value><c>true</c> if this node is a leaf; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.Color">
            <summary>
            Gets the averaged leaf color.
            </summary>
            <value>The leaf color.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.ActiveNodesPixelCount">
            <summary>
            Gets the active nodes pixel count.
            </summary>
            <value>The active nodes pixel count.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.ActiveNodes">
            <summary>
            Enumerates only the leaf nodes.
            </summary>
            <value>The enumerated leaf nodes.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.AddColor(Adamantium.Mathematics.Color,System.Int32,Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Adds the color.
            </summary>
            <param name="color">The color.</param>
            <param name="level">The level.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.GetPaletteIndex(Adamantium.Mathematics.Color,System.Int32)">
            <summary>
            Gets the index of the palette.
            </summary>
            <param name="color">The color.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.RemoveLeaves(System.Int32,System.Int32,System.Int32,Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Removes the leaves by summing all it's color components and pixel presence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.GetColorIndexAtLevel(Adamantium.Mathematics.Color,System.Int32)">
            <summary>
            Calculates the color component bit (level) index.
            </summary>
            <param name="color">The color for which the index will be calculated.</param>
            <param name="level">The bit index to be used for index calculation.</param>
            <returns>The color index at a certain depth level.</returns>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode.SetPaletteIndex(System.Int32)">
            <summary>
            Sets a palette index to this node.
            </summary>
            <param name="index">The palette index.</param>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer">
             <summary>
             The idea here is to build a tree structure containing always a maximum of K different 
             colors. If a further color is to be added to the tree structure, its color value has 
             to be merged with the most likely one that is already in the tree. The both values are 
             substituted by their mean. 
            
             The most important data structure are the nodes of the octree. Each inner node of the 
             octree contain a maximum of eight successors, the leave nodes keep information for the 
             color value (colorvalue), the color index (colorindex), and a counter (colorcount) for 
             the pixel that are already mapped to a particular leave. Because each of the red, green 
             and blue value is between 0 and 255 the maximum depth of the tree is eight. In level i 
             Bit i of RGB is used as selector for the successors. 
            
             The octree is constructed during reading the image that is to be quantized. Only that 
             parts of the octree are created that are really needed. Initially the first K values 
             are represented exactly (in level eight). When the number of leaves nodes (currentK) 
             exceeds K, the tree has to reduced. That would mean that leaves at the largest depth 
             are substituted by their predecessor.
             </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.Leaves">
            <summary>
            Gets the leaf nodes only (recursively).
            </summary>
            <value>All the tree leaves.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.AddLevelNode(System.Int32,Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeNode)">
            <summary>
            Adds the node to a level node list.
            </summary>
            <param name="level">The depth level.</param>
            <param name="octreeNode">The octree node to be added.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnGetColorCount">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.OnFinish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Octree.OctreeQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.OptimalPalette.OptimalPaletteQuantizer.#cctor">
            <summary>
            Initializes the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.OptimalPalette.OptimalPaletteQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.OptimalPalette.OptimalPaletteQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.OptimalPalette.OptimalPaletteQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.OptimalPalette.OptimalPaletteQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityColorSlot.PixelCount">
            <summary>
            Gets or sets the pixel count.
            </summary>
            <value>The pixel count.</value>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityColorSlot.#ctor(Adamantium.Mathematics.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityColorSlot"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityColorSlot.AddValue(Adamantium.Mathematics.Color)">
            <summary>
            Adds the value to the slot.
            </summary>
            <param name="color">The color to be added.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityColorSlot.GetAverage">
            <summary>
            Gets the average, just simple value divided by pixel presence.
            </summary>
            <returns>The average color component value.</returns>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer">
             <summary>
             Popularity algorithms are another form of uniform quantization. However, instead of 
             dividing the color space into 256 regions these algorithms break the color space into 
             much smaller, and consequently many more, regions. One possible implementation is to 
             divide the space into regions 4x4x4 in size (262,144 regions). The original colors are 
             again mapped to the region they fall in. The representative color for each region is the 
             average of the colors mapped to it. The color map is selected by taking the representative 
             colors of the 256 most popular regions (the regions that had the most colors mapped to them). 
             If a non-empty region is not selected for the color map its index into the color map (the 
             index that will be assigned to colors that map to that region) is then the entry in the color 
             map that is closest (Euclidean distance) to its representative color). 
            
             These algorithms are also easy to implement and yield better results than the uniform 
             quantization algorithm. They do, however, take slightly longer to execute and can have a 
             significantly larger storage requirement depending on the size of regions. Also depending 
             on the image characteristics this may not produce a good result. This can be said about all 
             uniform sub-division schemes, because the method for dividing the color space does utilize 
             any information about the image.
             </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Popularity.PopularityQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformColorSlot.AddValue(System.Int32)">
            <summary>
            Adds the value to the slot.
            </summary>
            <param name="component">The color component value.</param>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformColorSlot.GetAverage">
            <summary>
            Gets the average, just simple value divided by pixel presence.
            </summary>
            <returns>The average color component value.</returns>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer">
             <summary>
             In uniform quantization each axis of the color space is treated independently. 
             Each axis is then divided into equal sized segments. The planes perpendicular to 
             the axis' that pass through the division points then define regions in the color 
             space. The number of these regions is dependent on the scheme used for dividing the 
             color space. One possible scheme is to divide the red and green axis into 8 segments 
             each and the blue axis into 4 resulting in 256 regions. Another possibility is dividing 
             the red and blue into 6 and the green into 7 segments resulting in 252 regions [3]. Each 
             one of these regions will produce a color for the color map.
             
             Once the color space has been divided each of the original colors is then mapped to the 
             region which it falls in. The representative colors for each region is then the average 
             of all the colors mapped to that region. Because each of the regions represents an entry
             in the color map, the same process for mapping the original colors to a region can be 
             repeated for mapping the original colors to colors in the color map. While this algorithm 
             is quick and easy to implement it does not yield very good results. Often region in the 
             color space will not have any colors mapped to them resulting in color map entries to be
             wasted.
            
             This algorithm can also be applied in a non-uniform manner if the axis are broken on a 
             logarithmic scale instead of linear. This will produce slightly better results because 
             the human eye cannot distinguish dark colors as well as bright ones.
             </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.Uniform.UniformQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.RedMinimum">
            <summary>
            Gets or sets the red minimum.
            </summary>
            <value>The red minimum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.RedMaximum">
            <summary>
            Gets or sets the red maximum.
            </summary>
            <value>The red maximum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.GreenMinimum">
            <summary>
            Gets or sets the green minimum.
            </summary>
            <value>The green minimum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.GreenMaximum">
            <summary>
            Gets or sets the green maximum.
            </summary>
            <value>The green maximum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.BlueMinimum">
            <summary>
            Gets or sets the blue minimum.
            </summary>
            <value>The blue minimum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.BlueMaximum">
            <summary>
            Gets or sets the blue maximum.
            </summary>
            <value>The blue maximum.</value>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube.Volume">
            <summary>
            Gets or sets the cube volume.
            </summary>
            <value>The volume.</value>
        </member>
        <member name="T:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer">
            <summary>
            Author:	Xiaolin Wu
            Dept. of Computer Science
            Univ. of Western Ontario
            London, Ontario N6A 5B7
            wu@csd.uwo.ca
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.CalculateMoments">
            <summary>
            Converts the histogram to a series of moments.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Volume(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Int64[0:,0:,0:])">
            <summary>
            Computes the volume of the cube in a specific moment.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.VolumeFloat(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Single[0:,0:,0:])">
            <summary>
            Computes the volume of the cube in a specific moment. For the floating-point values.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Top(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int32,System.Int64[0:,0:,0:])">
            <summary>
            Splits the cube in given position, and color direction.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Bottom(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int64[0:,0:,0:])">
            <summary>
            Splits the cube in a given color direction at its minimum.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.CalculateVariance(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube)">
            <summary>
            Calculates statistical variance for a given cube.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Maximize(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32},System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Finds the optimal (maximal) position for the cut.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Cut(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube)">
            <summary>
            Cuts a cube with another one.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.Mark(Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Marks all the tags with a given label.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnPrepare(Adamantium.Imaging.PaletteQuantizer.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.OnAddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.AddColor(Adamantium.Mathematics.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(Adamantium.Mathematics.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.OnFinish">
            <summary>
            See <see cref="M:Adamantium.Imaging.PaletteQuantizer.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.XiaolinWu.WuColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Adamantium.Imaging.PaletteQuantizer.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.PixelBuffer">
            <summary>
            An unmanaged buffer of pixels.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.PixelBuffer.isStrictRowStride">
            <summary>
            True when RowStride == sizeof(pixelformat) * width
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.#ctor(System.Int32,System.Int32,AdamantiumVulkan.Core.Format,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Adamantium.Imaging.PixelBuffer" /> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="format">The format.</param>
            <param name="rowStride">The row pitch.</param>
            <param name="bufferStride">The slice pitch.</param>
            <param name="dataPointer">The pixels.</param>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.Format">
            <summary>
            Gets the format (this value can be changed)
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.PixelSize">
            <summary>
            Gets the pixel size in bytes.
            </summary>
            <value>The pixel size in bytes.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.RowStride">
            <summary>
            Gets the row stride in number of bytes.
            </summary>
            <value>The row stride in number of bytes.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.BufferStride">
            <summary>
            Gets the total size in bytes of this pixel buffer.
            </summary>
            <value>The size in bytes of the pixel buffer.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.DataPointer">
            <summary>
            Gets the pointer to the pixel buffer.
            </summary>
            <value>The pointer to the pixel buffer.</value>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.XOffset">
            <summary>
            Gets the horizontal offset to this pixel buffer regarding main image
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.YOffset">
            <summary>
            Gets the vertical offset to this pixel buffer regarding main image
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.DelayNumerator">
            <summary>
            Frame delay fraction numerator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.DelayDenominator">
            <summary>
            Frame delay fraction denominator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PixelBuffer.SequenceNumber">
            <summary>
            Sequence number of current pixel buffer aka frame
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.CopyTo(Adamantium.Imaging.PixelBuffer)">
            <summary>
            Copies this pixel buffer to a destination pixel buffer.
            </summary>
            <param name="pixelBuffer">The destination pixel buffer.</param>
            <remarks>
            The destination pixel buffer must have exactly the same dimensions (width, height) and format than this instance.
            Destination buffer can have different row stride.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.Save(Adamantium.Imaging.Image,System.String,Adamantium.Imaging.ImageFileType)">
            <summary>
            Saves this pixel buffer to a file.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.Save(Adamantium.Imaging.Image,System.IO.Stream,Adamantium.Imaging.ImageFileType)">
            <summary>
            Saves this pixel buffer to a stream.
            </summary>
            <param name="imageStream">The destination stream.</param>
            <param name="fileType">Specify the output format.</param>
            <remarks>This method support the following format: <c>dds, bmp, jpg, png, gif, tiff, wmp, tga</c>.</remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.GetPixel``1(System.Int32,System.Int32)">
            <summary>
            Gets the pixel value at a specified position.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <returns>The pixel value.</returns>
            <remarks>
            Caution, this method doesn't check bounding.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.SetPixel``1(System.Int32,System.Int32,``0)">
            <summary>
            Gets the pixel value at a specified position.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="value">The pixel value.</param>
            <remarks>
            Caution, this method doesn't check bounding.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.GetPixels``1(System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="yOffset">The y line offset.</param>
            <returns>Scanline pixels from the buffer</returns>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.GetPixels``1(``0[],System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="pixels">An allocated scanline pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <returns>Scanline pixels from the buffer</returns>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.GetPixels``1(``0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets scanline pixels from the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="pixels">An allocated scanline pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <param name="pixelIndex">Offset into the destination <paramref name="pixels"/> buffer.</param>
            <param name="pixelCount">Number of pixels to write into the destination <paramref name="pixels"/> buffer.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.SetPixels``1(``0[],System.Int32)">
            <summary>
            Sets scanline pixels to the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="sourcePixels">Source pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="M:Adamantium.Imaging.PixelBuffer.SetPixels``1(``0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets scanline pixels to the buffer.
            </summary>
            <typeparam name="T">Type of the pixel data</typeparam>
            <param name="sourcePixels">Source pixel buffer</param>
            <param name="yOffset">The y line offset.</param>
            <param name="pixelIndex">Offset into the source <paramref name="sourcePixels"/> buffer.</param>
            <param name="pixelCount">Number of pixels to write into the source <paramref name="sourcePixels"/> buffer.</param>
            <exception cref="T:System.ArgumentException">If the sizeof(T) is an invalid size</exception>
            <remarks>
            This method is working on a row basis. The <paramref name="yOffset"/> is specifying the first row to get 
            the pixels from.
            </remarks>
        </member>
        <member name="T:Adamantium.Imaging.PixelBufferArray">
            <summary>
            Used by <see cref="T:Adamantium.Imaging.Image"/> to provide a selector to a <see cref="T:Adamantium.Imaging.PixelBuffer"/>.
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.PixelBufferArray.Item(System.Int32)">
            <summary>
            Gets the pixel buffer.
            </summary>
            <returns>A <see cref="T:Adamantium.Imaging.PixelBuffer"/>.</returns>
        </member>
        <member name="P:Adamantium.Imaging.PixelBufferArray.Count">
            <summary>
            Gets the total number of pixel buffers.
            </summary>
            <returns>The total number of pixel buffers.</returns>
        </member>
        <member name="P:Adamantium.Imaging.PixelBufferArray.Item(System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayOrDepthSlice">For 3D image, the parameter is the Z slice, otherwise it is an index into the texture array.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>A <see cref="T:Adamantium.Imaging.PixelBuffer"/>.</returns>
        </member>
        <member name="P:Adamantium.Imaging.PixelBufferArray.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the pixel buffer for the specified array/z slice and mipmap level.
            </summary>
            <param name="arrayIndex">Index into the texture array. Must be set to 0 for 3D images.</param>
            <param name="zIndex">Z index for 3D image. Must be set to 0 for all 1D/2D images.</param>
            <param name="mipIndex">The mip map slice index.</param>
            <returns>A <see cref="T:Adamantium.Imaging.PixelBuffer"/>.</returns>
        </member>
        <member name="T:Adamantium.Imaging.Png.BPMLists">
            <summary>
            Lists of chains
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.Png.BPMNode">
            <summary>
            /*BPM: Boundary Package Merge, see "A Fast and Space-Economical Algorithm for Length-Limited Coding",
            Jyrki Katajainen, Alistair Moffat, Andrew Turpin, 1995.*/
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Png.BPMNode.Create(Adamantium.Imaging.Png.BPMLists,System.Int32,System.Int32,Adamantium.Imaging.Png.BPMNode)">
            <summary>
            creates a new chain node with the given parameters, from the memory in the lists
            </summary>
            <param name="lists"></param>
            <param name="weight"></param>
            <param name="index"></param>
            <param name="tail"></param>
            <returns></returns>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.SequenceNumber">
            <summary>
            Sequence number of the animation chunk, starting from 0
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.Width">
            <summary>
            Width of the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.Height">
            <summary>
            Height of the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.XOffset">
            <summary>
            X position at which to render the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.YOffset">
            <summary>
            Y position at which to render the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.DelayNum">
            <summary>
            Frame delay fraction numerator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.DelayDen">
            <summary>
            Frame delay fraction denominator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.DisposeOp">
            <summary>
            Type of frame area disposal to be done after rendering this frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.fcTL.BlendOp">
            <summary>
            Type of frame area rendering for this frame
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Png.Chunks.iCCP.IsGrayICCProfile(System.Byte[])">
            <summary>
            It is a gray profile if bytes 16-19 are "GRAY", rgb profile if bytes 16-19
            are "RGB ". We do not perform any full parsing of the ICC profile here, other
            than check those 4 bytes to grayscale profile. Other than that, validity of
            the profile is not checked. This is needed only because the PNG specification
            requires using a non-gray color model if there is an ICC profile with "RGB "
            (sadly limiting compression opportunities if the input data is grayscale RGB
            data), and requires using a gray color model if it is "GRAY".
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.Chunks.IDAT.RawData">
            <summary>
            Raw color data in RGBARGBARGBA...
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.FilterStrategy.Zero">
            <summary>
            Every filter at zero
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.FilterStrategy.MinSum">
            <summary>
            Use filter that gives minimum sum, as described in the official PNG filter heuristic.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.FilterStrategy.Entropy">
            <summary>
            Use the filter type that gives smallest Shannon entropy for this scanline. Depending
            on the image, this is better or worse than minsum.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.FilterStrategy.BruteForce">
            <summary>
            Brute-force-search PNG filters by compressing each filter for each scanline.
            Experimental, very slow, and only rarely gives better compression than MINSUM.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.Png.PNGColorConvertion.ConvertRGB(System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32,System.UInt32,System.UInt32,Adamantium.Imaging.Png.PNGColorMode,Adamantium.Imaging.Png.PNGColorMode)">
            <summary>
            Converts a single rgb color without alpha from one type to another, color bits truncated to
            their bitdepth.In case of single channel (gray or palette), only the r channel is used.Slow
            function, do not use to process all pixels of an image.Alpha channel not supported on purpose:
            this is for bKGD, supporting alpha may prevent it from finding a color in the palette, from the
            specification it looks like bKGD should ignore the alpha values of the palette since it can use
            any palette index but doesn't have an alpha channel. Idem with ignoring color key.
            </summary>
            <param name=""></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Adamantium.Imaging.Png.PNGEncoderSettings.CompressionLevel" -->
        <member name="P:Adamantium.Imaging.Png.PNGFrame.SequenceNumberFCTL">
            <summary>
            Sequence number of the animation chunk, starting from 0
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.Width">
            <summary>
            Width of the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.Height">
            <summary>
            Height of the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.XOffset">
            <summary>
            X position at which to render the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.YOffset">
            <summary>
            Y position at which to render the following frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.DelayNumerator">
            <summary>
            Frame delay fraction numerator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.DelayDenominator">
            <summary>
            Frame delay fraction denominator
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.DisposeOp">
            <summary>
            Type of frame area disposal to be done after rendering this frame
            </summary>
        </member>
        <member name="P:Adamantium.Imaging.Png.PNGFrame.BlendOp">
            <summary>
            Type of frame area rendering for this frame
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.RenderingIntent.Perceptual">
            <summary>
            Perceptual intent is for images preferring good adaptation to the output device 
            gamut at the expense of colorimetric accuracy, like photographs.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.RenderingIntent.RelativeColorimetric">
            <summary>
            Relative colorimetric intent is for images requiring color appearance matching 
            (relative to the output device white point), like logos.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.RenderingIntent.Saturation">
            <summary>
            Saturation intent is for images preferring preservation of saturation at the expense of 
            hue and lightness, like charts and graphs.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.Png.RenderingIntent.AbsoluteColorimetric">
            <summary>
            Absolute colorimetric intent is for images requiring preservation of absolute colorimetry, 
            like proofs (previews of images destined for a different output device).
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat">
            <summary>
            PixelFormat is equivalent to <see cref="T:AdamantiumVulkan.Core.Format"/>.
            </summary>
            <remarks>
            This structure is implicitly castable to and from <see cref="T:AdamantiumVulkan.Core.Format"/>, you can use it inplace where <see cref="T:AdamantiumVulkan.Core.Format"/> is required
            and vice-versa.
            Usage is slightly different from <see cref="T:AdamantiumVulkan.Core.Format"/>, as you have to select the type of the pixel format first (<example>Typeless, SInt</example>...etc)
            and then access the available pixel formats for this type. Example: PixelFormat.UNorm.R8.
            </remarks>
            <msdn-id>bb173059</msdn-id>	
            <unmanaged>DXGI_FORMAT</unmanaged>	
            <unmanaged-short>DXGI_FORMAT</unmanaged-short>	
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.Value">
            <summary>
            Gets the value as a <see cref="T:AdamantiumVulkan.Core.Format"/> enum.
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.#ctor(AdamantiumVulkan.Core.Format)">
            <summary>
            Internal constructor.
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Adamantium.Imaging.SurfaceFormat.SizeInBytes">
            <summary>
            Size in bytes of current Surface format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.Undefined">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.UNDEFINED"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R4G4">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.R4G4_UNORM_PACK8"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R4G4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R4G4_UNORM_PACK8"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R4G4B4A4">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.R4G4B4A4_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R4G4B4A4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R4G4B4A4_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B4G4R4A4">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.B4G4R4A4_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B4G4R4A4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B4G4R4A4_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R5G6B5">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.R5G6B5_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R5G6B5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R5G6B5_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B5G6R5">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.B5G6R5_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B5G6R5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B5G6R5_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R5G5B5A1">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.R5G5B5A1_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R5G5B5A1.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R5G5B5A1_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B5G5R5A1">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.B5G5R5A1_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B5G5R5A1.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B5G5R5A1_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.A1R5G5B5">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.A1R5G5B5_UNORM_PACK16"/> formats
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A1R5G5B5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A1R5G5B5_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R8G8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R8G8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R8G8B8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R8G8B8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B8G8R8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.B8G8R8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R8G8B8A8">
            <summary>
            <see cref="!:Format.R8G8B8A8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R8G8B8A8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R8G8B8A8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B8G8R8A8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.B8G8R8A8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8A8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8A8_SRGB"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.A8B8G8R8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.A8B8G8R8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_UNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_SNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_USCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_SSCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_UINT_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_SINT_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A8B8G8R8.Srgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A8B8G8R8_SRGB_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.A2R10G10B10">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.A2R10G10B10"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_UNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_SNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_USCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_SSCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_UINT_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2R10G10B10.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2R10G10B10_SINT_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.A2B10G10R10">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.A2B10G10R10"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_UNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_SNORM_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_USCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_SSCALED_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_UINT_PACK32"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.A2B10G10R10.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.A2B10G10R10_SINT_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R16">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R16"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R16G16">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R16G16"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R16G16B16">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R16G16B16"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R16G16B16A16">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R16G16B16A16"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_SNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.UScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_USCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.SScaled">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_SSCALED"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R16G16B16A16.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R16G16B16A16_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R32">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R32"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R32G32">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R32G32"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R32G32B32">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R32G32B32"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R32G32B32A32">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R32G32B32A32"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32A32.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32A32_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32A32.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32A32_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R32G32B32A32.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R32G32B32A32_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R64">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R64"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R64G64">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R64G64"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R64G64B64">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R64G64B64"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R64G64B64A64">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R64G64B64A64"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64A64.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64A64_UINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64A64.SInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64A64_SINT"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R64G64B64A64.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R64G64B64A64_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B10G11R11">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.B10G11R11"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B10G11R11.UFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B10G11R11_UFLOAT_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.E5B9G9R9">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.E5B9G9R9"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.E5B9G9R9.UFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.E5B9G9R9_UFLOAT_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.D16">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.D16_UNORM"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.D16.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.D16_UNORM"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.X8D24">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.X8_D24_UNORM_PACK32"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.X8D24.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.X8_D24_UNORM_PACK32"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.D32">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.D32_SFLOAT"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.D32.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.D32_SFLOAT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.S8">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.S8_UINT"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.S8.UInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.S8_UINT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.D16S8">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.D16_UNORM_S8_UINT"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.D16S8.UNormUInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.D16_UNORM_S8_UINT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.D24S8">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.D24_UNORM_S8_UINT"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.D24S8.UNormUInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.D24_UNORM_S8_UINT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.D32S8">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.D32_SFLOAT_S8_UINT"/> format
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.D32S8.SFloatUInt">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.D32_SFLOAT_S8_UINT"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC1">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC1"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC1.RgbUNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC1_RGB_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC1.RgbSRgbUNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC1_RGB_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC1.RgbaUNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC1_RGBA_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC1.RgbaSRgbUNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC1_RGBA_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC2">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC2"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC2.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC2_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC2.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC2_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC3">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC3"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC3.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC3_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC3.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC3_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC4">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC4"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC4_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC4.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC4_SNORM_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC5">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC5"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC5_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC5.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC5_SNORM_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC6H">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC7"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC6H.UFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC6H_UFLOAT_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC6H.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC6H_SFLOAT_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.BC7">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.BC7"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC7.UFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC7_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.BC7.SFloat">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.BC7_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8">
            <summary>
            <see cref="!:Format.ETC2_R8G8B8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8A1">
            <summary>
            <see cref="!:Format.ETC2_R8G8B8A1"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8A1.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8A1_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2R8G8B8A1.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8A1_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ETC2_R8G8B8A8">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.ETC2_R8G8B8A8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2_R8G8B8A8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8A8_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ETC2_R8G8B8A8.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ETC2_R8G8B8A8_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.EACR11">
            <summary>
            <see cref="!:Format.EAC_R11"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.EACR11.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.EAC_R11_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.EACR11.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.EAC_R11_SNORM_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.EACR11G11">
            <summary>
            <see cref="!:Format.EAC_R11G11"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.EACR11G11.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.EAC_R11G11_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.EACR11G11.SNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.EAC_R11G11_SNORM_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC4x4">
            <summary>
            <see cref="!:Format.ASTC_4x4"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC4x4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_4x4_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC4x4.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_4x4_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC5x4">
            <summary>
            <see cref="!:Format.ASTC_5x4"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC5x4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_5x4_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC5x4.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_5x4_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC5x5">
            <summary>
            <see cref="!:Format.ASTC_5x5"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC5x5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_5x5_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC5x5.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_5x5_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC6x5">
            <summary>
            <see cref="!:Format.ASTC_6x5"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC6x5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_6x5_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC6x5.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_6x5_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC6x6">
            <summary>
            <see cref="!:Format.ASTC_6x6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC6x6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_6x6_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC6x6.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_6x6_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC8x5">
            <summary>
            <see cref="!:Format.ASTC_8x5"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x5_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x5.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x5_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC8x6">
            <summary>
            <see cref="!:Format.ASTC_8x6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x6_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x6.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x6_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC8x8">
            <summary>
            <see cref="!:Format.ASTC_8x8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x8_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC8x8.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_8x8_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC10x5">
            <summary>
            <see cref="!:Format.ASTC_10x5"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x5.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x5_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x5.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x5_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC10x6">
            <summary>
            <see cref="!:Format.ASTC_10x6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x6_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x6.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x6_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC10x8">
            <summary>
            <see cref="!:Format.ASTC_10x8"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x8.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x8_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x8.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x8_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC10x10">
            <summary>
            <see cref="!:Format.ASTC_10x10"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x10.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x10_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC10x10.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_10x10_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC12x10">
            <summary>
            <see cref="!:Format.ASTC_12x10"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC12x10.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_12x10_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC12x10.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_12x10_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.ASTC12x12">
            <summary>
            <see cref="!:Format.ASTC_12x12"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC12x12.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_12x12_UNORM_BLOCK"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.ASTC12x12.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.ASTC_12x12_SRGB_BLOCK"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8G8R8_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.G8B8G8R8_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8G8R8_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8B8G8R8_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8G8R8_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8B8G8R8_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B8G8R8G8_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.B8G8R8G8_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8G8_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8G8_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B8G8R8G8_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B8G8R8G8_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_420">
            <summary>
            <see cref="!:Format.G8_B8_R8_3PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_420_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_420_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_420">
            <summary>
            <see cref="!:Format.G8_B8R8_2PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8R8_2PLANE_420_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8R8_2PLANE_420_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_422">
            <summary>
            <see cref="!:Format.G8_B8_R8_3PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_422">
            <summary>
            <see cref="!:Format.G8_B8R8_2PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8R8_2PLANE_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R82PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8R8_2PLANE_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_444">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_444_UNORM"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_444.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_444_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G8B8R83PLANE_444.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G8_B8_R8_3PLANE_444_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R10X6">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R10X6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6_UNORM_PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R10X6G10X6">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R10X6G10X6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6G10X6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6G10X6_UNORM_2PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6G10X6.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6G10X6_UNORM_2PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R10X6G10X6B10X6A10X6">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R10X6G10X6B10X6A10X6"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6G10X6B10X6A10X6.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6G10X6B10X6A10X6_UNORM_4PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R10X6G10X6B10X6A10X6.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6G10X6R10X6_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6G10X6R10X6_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6G10X6R10X6_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6B10X6G10X6R10X6_422_UNORM_4PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6G10X6R10X6_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Adamantium.Imaging.SurfaceFormat.B10X6G10X6R10X6G10X6_422" -->
        <member name="F:Adamantium.Imaging.SurfaceFormat.B10X6G10X6R10X6G10X6_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B10X6G10X6R10X6G10X6_422_UNORM_4PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B10X6G10X6R10X6G10X6_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_420">
            <summary>
            <see cref="!:Format.G10X6_B10X6_R10X6_3PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_420">
            <summary>
            <see cref="!:Format.G10X6_B10X6R10X6_2PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_422">
            <summary>
            <see cref="!:Format.G10X6_B10X6_R10X6_3PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_422">
            <summary>
            <see cref="!:Format.G10X6_B10X6R10X6_2PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X62PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_444">
            <summary>
            <see cref="!:Format.G10X6_B10X6_R10X6_3PLANE_444"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_444.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G10X6B10X6R10X63PLANE_444.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R12X4">
            <summary>
            <see cref="F:AdamantiumVulkan.Core.Format.R12X4_UNORM_PACK16"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4_UNORM_PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4_UNORM_PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R12X4G12X4">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R12X4G12X4"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4G12X4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4G12X4_UNORM_2PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4G12X4.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4G12X4_UNORM_2PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.R12X4G12X4B12X4A12X4">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.R12X4G12X4B12X4A12X4"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4G12X4B12X4A12X4.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4G12X4B12X4A12X4_UNORM_4PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.R12X4G12X4B12X4A12X4.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4G12X4R12X4_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4G12X4R12X4_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4G12X4R12X4_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4B12X4G12X4R12X4_422_UNORM_4PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4G12X4R12X4_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_420">
            <summary>
            <see cref="!:Format.G12X4_B12X4_R12X4_3PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_420">
            <summary>
            <see cref="!:Format.G12X4_B12X4R12X4_2PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_422">
            <summary>
            <see cref="!:Format.G12X4_B12X4_R12X4_3PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_422">
            <summary>
            <see cref="!:Format.G12X4_B12X4R12X4_2PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X42PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_444">
            <summary>
            <see cref="!:Format.G12X4_B12X4_R12X4_3PLANE_444"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_444.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G12X4B12X4R12X43PLANE_444.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16G16R16_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.G16B16G16R16_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16G16R16_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16B16G16R16_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16G16R16_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16B16G16R16_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.B16G16R16G16_422">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.B16G16R16G16_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B16G16R16G16_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B16G16R16G16_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.B16G16R16G16_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.B16G16R16G16_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_420">
            <summary>
            <see cref="!:Format.G16_B16_R16_3PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_420_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_420_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_420">
            <summary>
            <see cref="!:Format.G16_B16R16_2PLANE_420"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_420.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16R16_2PLANE_420_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_420.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16R16_2PLANE_420_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_422">
            <summary>
            <see cref="!:Format.G16_B16_R16_3PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_422">
            <summary>
            <see cref="!:Format.G16_B16R16_2PLANE_422"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_422.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16R16_2PLANE_422_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R162PLANE_422.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16R16_2PLANE_422_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_444">
            <summary>
            <see cref="!:Format.G16_B16_R16_3PLANE_444"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_444.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_444_UNORM"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.G16B16R163PLANE_444.UNormKhr">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.G16_B16_R16_3PLANE_444_UNORM_KHR"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.PVRTC1_2BPP">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.PVRTC1_2BPP"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC1_2BPP.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC1_2BPP_UNORM_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC1_2BPP.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC1_2BPP_SRGB_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.PVRTC1_4BPP">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.PVRTC1_4BPP"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC1_4BPP.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC1_4BPP_UNORM_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC1_4BPP.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC1_4BPP_SRGB_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.PVRTC2_2BPP">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.PVRTC2_2BPP"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC2_2BPP.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC2_2BPP_UNORM_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC2_2BPP.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC2_2BPP_SRGB_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="T:Adamantium.Imaging.SurfaceFormat.PVRTC2_4BPP">
            <summary>
            <see cref="T:Adamantium.Imaging.SurfaceFormat.PVRTC2_4BPP"/> formats family
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC2_4BPP.UNorm">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC2_4BPP_UNORM_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.SurfaceFormat.PVRTC2_4BPP.SRgb">
            <summary>
            Corresponds to <see cref="F:AdamantiumVulkan.Core.Format.PVRTC2_4BPP_SRGB_BLOCK_IMG"/>
            </summary>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.op_Implicit(Adamantium.Imaging.SurfaceFormat)~AdamantiumVulkan.Core.Format">
            <summary>
            Returns <see cref="T:AdamantiumVulkan.Core.Format"/> from <see cref="T:Adamantium.Imaging.SurfaceFormat"/>
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.op_Implicit(AdamantiumVulkan.Core.Format)~Adamantium.Imaging.SurfaceFormat">
            <summary>
            Returns <see cref="T:Adamantium.Imaging.SurfaceFormat"/> form <see cref="T:AdamantiumVulkan.Core.Format"/>
            </summary>
            <param name="from">DXGI Format</param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.Equals(Adamantium.Imaging.SurfaceFormat)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other"><see cref="T:Adamantium.Imaging.SurfaceFormat"/> to compare</param>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false. 
            </returns>
            <param name="obj">The object to compare with the current instance. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.op_Equality(Adamantium.Imaging.SurfaceFormat,Adamantium.Imaging.SurfaceFormat)">
            <summary>
            Overload for comparing 2 <see cref="T:Adamantium.Imaging.SurfaceFormat"/> variables
            </summary>
            <param name="left">left <see cref="T:Adamantium.Imaging.SurfaceFormat"/></param>
            <param name="right">right <see cref="T:Adamantium.Imaging.SurfaceFormat"/></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.op_Inequality(Adamantium.Imaging.SurfaceFormat,Adamantium.Imaging.SurfaceFormat)">
            <summary>
            Overload for comparing 2 <see cref="T:Adamantium.Imaging.SurfaceFormat"/> variables
            </summary>
            <param name="left">left <see cref="T:Adamantium.Imaging.SurfaceFormat"/></param>
            <param name="right">right <see cref="T:Adamantium.Imaging.SurfaceFormat"/></param>
            <returns></returns>
        </member>
        <member name="M:Adamantium.Imaging.SurfaceFormat.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a <see cref="T:Adamantium.Imaging.SurfaceFormat"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Adamantium.Imaging.TextureDimension">
            <summary>
            Represents dimension of the texture 1D, 2D, 3D or Cube
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.TextureDimension.Undefined">
            <summary>
            The texture dimension is unknown.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.TextureDimension.Texture1D">
            <summary>
            The texture dimension is 1D.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.TextureDimension.Texture2D">
            <summary>
            The texture dimension is 2D.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.TextureDimension.Texture3D">
            <summary>
            The texture dimension is 3D.
            </summary>
        </member>
        <member name="F:Adamantium.Imaging.TextureDimension.TextureCube">
            <summary>
            The texture dimension is a CubeMap.
            </summary>
        </member>
    </members>
</doc>
