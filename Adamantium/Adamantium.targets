<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

   <ItemGroup>
      <AvailableItemName Include="Effect"/>
      <!--<AvailableItemName Include="Font"/>-->
   </ItemGroup>
    
   <!-- In Project A -->  
  <UsingTask Architecture="*" TaskName="Adamantium.Build.Tasks.EffectCompilerTask" AssemblyFile="$(SolutionDir)Adamantium.Build.Tasks\bin\Debug\netstandard2.0\Adamantium.Build.Tasks.dll"/>
   <!--<UsingTask Architecture="*" TaskName="Adamantium.Engine.CompilerTask.FontCompilerTask"     AssemblyFile="$(SolutionDir)Adamantium.Engine.CompilerTask\bin\Debug\Adamantium.Engine.CompilerTask.dll"/>-->
   <UsingTask Architecture="*" TaskName="Adamantium.Build.Tasks.CompilerTask" AssemblyFile="$(SolutionDir)Adamantium.Build.Tasks\bin\Debug\netstandard2.0\Adamantium.Build.Tasks.dll"/>

  
    <!-- 1st PART : When Project A is built, It will generate effectively the files -->
   <!-- Plugs all dependency listing in AssignTargetPathsDependsOn - in order to support generated output to be copied as part of the build  -->
   <PropertyGroup >
      <BuildDependsOn>
         EngineCompileTarget;
         $(BuildDependsOn);
      </BuildDependsOn>


      <!-- 2nd PART : When Project B is built, It will call GetCopyToOutputDirectoryItems on ProjectA so we need to generate this list when it is called  -->
      <!-- For this we need to override AssignTargetPathsDependsOn in order to generate the list of files -->
      <!-- as GetCopyToOutputDirectoryItems  ultimately depends on AssignTargetPathsDependsOn -->
      <!-- Content need to be generated before AssignTargets, because AssignTargets will prepare all files to be copied later by GetCopyToOutputDirectoryItems -->
      <!-- This part is also called from ProjectA when target 'PrepareResources' is called -->
      <AssignTargetPathsDependsOn>
         $(AssignTargetPathsDependsOn);
         EngineContentAndCompileTarget;
      </AssignTargetPathsDependsOn>

      <IsBuildInDebug>true</IsBuildInDebug>

      <!--By default turn-on debugging on fx files when compiling in debug (no optimize)-->
      <EngineEffectDebugOption Condition="'$(EngineEffectDebugOption)' == ''">$(IsBuildInDebug)</EngineEffectDebugOption>

      <EffectDynamicCompilingOption Condition="'$(EffectDynamicCompilingOption)' == ''">$(IsBuildInDebug)</EffectDynamicCompilingOption>

      <GenerateCsFileFromEffect>false</GenerateCsFileFromEffect>
      <GenerateBinaryFromEffect>true</GenerateBinaryFromEffect>
      <GenerateCsFileFromFont>false</GenerateCsFileFromFont>
      <GenerateBinaryFromFont>true</GenerateBinaryFromFont>
      <CompileFontBitmaps>false</CompileFontBitmaps>
     <EffectToolPath>C:\Source\Repos\Adamantium\Adamantium\Adamantium.Engine.ContentCompiler.CLI\bin\x64\Debug\netcoreapp3.1\Adamantium.Engine.ContentCompiler.CLI.exe</EffectToolPath>
      
   </PropertyGroup>
<!-- Target used to calculate dependency output -->
   <Target Name="EngineContentAndCompileTarget" BeforeTargets="Build">
      <CompilerTask
         ProjectDirectory="$(ProjectDir)"
         IntermediateDirectory="$(IntermediateOutputPath)"
         Debug="$(EngineEffectDebugOption)"
         Files="@(Effect)"
         RootNamespace="$(RootNamespace)"
         ToolPath="$(EffectToolPath)"
         >
         
      </CompilerTask>

      <ItemGroup>
         <!--List Of fx compiled file-->
         <Content Include="@(EngineContent)" KeepMetadata="Link;CopyToOutputDirectory"/>

         <!--List of cs compiled file-->
         <Compile Include="@(EngineCompile)"/>
      </ItemGroup>

   </Target>
   <Target Name="EngineCompileTarget" BeforeTargets="Build">
      <EffectCompilerTask
          ToolPath="$(EffectToolPath)"
          ProjectDirectory="$(ProjectDir)"
          IntermediateDirectory="$(IntermediateOutputPath)"
          DynamicCompiling="$(EffectDynamicCompilingOption)"
          Debug="$(IsBuildInDebug)"
          Files="@(Effect)"
          RootNamespace="$(RootNamespace)"
          CompileInCS ="$(GenerateCsFileFromEffect)"
          GenerateBinary = "$(GenerateBinaryFromEffect)"
        >
         <Output TaskParameter="ContentFiles" ItemName="EngineContent"/>
         <Output TaskParameter="CompiledFiles" ItemName="EngineCompile"/>
         </EffectCompilerTask>
      
      <!--<FontCompilerTask
          ProjectDirectory="$(ProjectDir)"
          IntermediateDirectory="$(IntermediateOutputPath)"
          DynamicCompiling="$(EffectDynamicCompilingOption)"
          Debug="$(IsBuildInDebug)"
          Files="@(Font)"
          RootNamespace="$(RootNamespace)"
          CompileInCS ="$(GenerateCsFileFromEffect)"
          GenerateBinary = "$(GenerateBinaryFromFont)"
          CompileFontBitmaps="$(CompileFontBitmaps)"
        >
         <Output TaskParameter="ContentFiles" ItemName="EngineContent"/>
         <Output TaskParameter="CompiledFiles" ItemName="EngineCompile"/>
         </FontCompilerTask>-->
         
      <Message Text="Hello from EngineCompileTarget" Importance="High"></Message>
   </Target>

</Project>